openapi: 3.0.0
info:
  title: Folders API
  description: API documentation for Folders
  version: 0.1.0
  license:
    name: UNLICENSED
    url: NONE
servers:
  - url: /api
    description: Base API endpoint
security:
  - basicAuth: []
externalDocs:
  url: /docs
  description: Documentation for the API
paths:
  /folders:
    get:
      summary: Get the list of folders
      tags:
        - folders
      operationId: getFolders
      parameters:
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: An array of folders
          content:
            application/json:
              schema:
                type: object
                required:
                  - folders
                properties:
                  folders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Folder'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a Folder
      tags:
        - folders
      operationId: createFolder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolder'
      responses:
        '200':
          description: An array of random values
          content:
            application/json:
              schema:
                type: object
                required:
                  - folder
                properties:
                  folder:
                    $ref: '#/components/schemas/Folder'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /folders/{folderId}:
    get:
      summary: Return a specific folder
      tags:
        - folders
      operationId: getFolder
      parameters:
        - $ref: '#/components/parameters/folderId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - folder
                properties:
                  folder:
                    $ref: '#/components/schemas/Folder'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Update a Folder
      tags:
        - folders
      operationId: updateFolder
      parameters:
        - $ref: '#/components/parameters/folderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolder'
      responses:
        '200':
          description: An array of random values
          content:
            application/json:
              schema:
                type: object
                required:
                  - folder
                properties:
                  folder:
                    $ref: '#/components/schemas/Folder'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a specific folder
      tags:
        - folders
      operationId: deleteFolder
      parameters:
        - $ref: '#/components/parameters/folderId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - deletedFolder
                properties:
                  deletedFolder:
                    $ref: '#/components/schemas/Folder'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /folders/{folderId}/files:
    get:
      summary: Get the list of files
      tags:
        - files
      operationId: getFolderFiles
      parameters:
        - $ref: '#/components/parameters/folderId'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: An array of files
          content:
            application/json:
              schema:
                type: object
                required:
                  - files
                properties:
                  files:
                    type: array
                    items:
                      $ref: '#/components/schemas/File'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a File
      tags:
        - files
      operationId: createFolderFile
      parameters:
        - $ref: '#/components/parameters/folderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFile'
      responses:
        '200':
          description: An array of random values
          content:
            application/json:
              schema:
                type: object
                required:
                  - file
                properties:
                  file:
                    $ref: '#/components/schemas/File'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /folders/{folderId}/files/{fileId}:
    get:
      summary: Return a specific file
      tags:
        - files
      operationId: getFolderFile
      parameters:
        - $ref: '#/components/parameters/folderId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - file
                properties:
                  file:
                    $ref: '#/components/schemas/File'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Update a File
      tags:
        - files
      operationId: updateFolderFile
      parameters:
        - $ref: '#/components/parameters/folderId'
        - $ref: '#/components/parameters/fileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFile'
      responses:
        '200':
          description: An array of random values
          content:
            application/json:
              schema:
                type: object
                required:
                  - file
                properties:
                  file:
                    $ref: '#/components/schemas/File'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a specific file
      tags:
        - files
      operationId: deleteFolderFile
      parameters:
        - $ref: '#/components/parameters/folderId'
        - $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - deletedFile
                properties:
                  deletedFile:
                    $ref: '#/components/schemas/File'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    limit:
      name: limit
      in: query
      description: Limit the amount of items returned
      required: true
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
    folderId:
      name: folderId
      in: path
      required: true
      description: The id of the folder to return
      schema:
        type: string
        format: uuid
    fileId:
      name: fileId
      in: path
      required: true
      description: The id of the file to return
      schema:
        type: string
        format: uuid
  schemas:
    Folder:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ErrorCodes:
      type: string
      enum:
        - UNKNOWN
        - MISSING_AUTH_ERROR
        - MUST_BE_STRING_VALUE
    ErrorDetail:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/ErrorCodes'
        paramType:
          type: string
          enum:
            - body
        locationPath:
          type: string
      additionalProperties: false
    ErrorResponse:
      type: object
      required:
        - message
        - errordetails
      properties:
        message:
          type: string
        errorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
      additionalProperties: false
    CreateFolder:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    UpdateFolder:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    File:
      type: object
      required:
        - id
        - folderId
        - name
      properties:
        id:
          type: string
          format: uuid
        folderId:
          type: string
          format: uuid
        name:
          type: string
    CreateFile:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    UpdateFile:
      type: object
      required:
        - name
      properties:
        name:
          type: string
  responses:
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
