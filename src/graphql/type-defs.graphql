type Painter {
  name: String!
  country: String!
  techniques: [Technique!]!
}

type Painting {
  author: String!
  title: String!
  technique: Technique!
  date: String!
}

type Technique {
  name: String!
}

input PainterInput {
  name: String!
  country: String!
  techniques: [String!]!
}

input PaintingInput {
  author: String!
  title: String!
  technique: String!
  date: String!
}

type Mutation {
  createPainter(input: PainterInput!): Painter!
  createPainting(input: PaintingInput!): Painting!
}

type Query {
  painters: [Painter!]! # get all painters
  paintings: [Painting!]! # get all paintings
  painter(id: String!): Painter # get a painter by id
  painting(id: String!): Painting # get a painting by id
}
